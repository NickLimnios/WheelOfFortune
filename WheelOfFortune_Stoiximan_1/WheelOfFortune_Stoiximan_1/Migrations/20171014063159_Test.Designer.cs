// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WheelOfFortune_Stoiximan_1;

namespace WheelOfFortune_Stoiximan_1.Migrations
{
    [DbContext(typeof(WheelOfFortuneContext))]
    [Migration("20171014063159_Test")]
    partial class Test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WheelOfFortune_Stoiximan_1.Models.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CouponCode");

                    b.Property<bool>("Flag_OnlyUseOncePerUser");

                    b.Property<int>("Uses");

                    b.Property<float>("Value");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("WheelOfFortune_Stoiximan_1.Models.PerCouponEligibleUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CouponId");

                    b.Property<string>("UserEmail");

                    b.HasKey("Id");

                    b.ToTable("Pceu");
                });

            modelBuilder.Entity("WheelOfFortune_Stoiximan_1.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("AmountPaid");

                    b.Property<float>("AmountReceived");

                    b.Property<int>("CouponID");

                    b.Property<string>("TAction");

                    b.Property<int?>("TUserId");

                    b.HasKey("Id");

                    b.HasIndex("TUserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WheelOfFortune_Stoiximan_1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("PhotoUrl");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WheelOfFortune_Stoiximan_1.Models.Transaction", b =>
                {
                    b.HasOne("WheelOfFortune_Stoiximan_1.Models.User", "TUser")
                        .WithMany()
                        .HasForeignKey("TUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
